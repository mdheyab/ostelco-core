# Default values for prime.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
firebaseServiceAccount: ""
  

prime:
  image: eu.gcr.io/pi-ostelco-dev/prime

  tag: a7c78ba2f
  pullPolicy: Always
  env: 
    FIREBASE_ROOT_PATH: dev_new
    NEO4J_HOST: neo4j-neo4j.neo4j.svc.cluster.local
    STRIPE_API_KEY: ""
  ports:
    - 8080
    - 8081
    - 8082 
    - 8083 
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi  
  livenessProbe: {}
    # path: /
    # port: 8081
  readinessProbe: {}
    # path: /
    # port: 8081  
  annotations: {}
    # prometheus.io/scrape: 'true'
    # prometheus.io/path: '/prometheus-metrics'
    # prometheus.io/port: '8081'  

esp:
  image: gcr.io/endpoints-release/endpoints-runtime
  tag: 1
  pullPolicy: IfNotPresent

ocsEsp: 
  enabled: true
  env: {}
  endpointAddress: prod-ocs.new.dev.ostelco.org

  ports:
    - 9000
    - 8443
  secrets: 
    - secretName: ocs-ostelco-ssl
      containerMountPath: /etc/nginx/ssl    

apiEsp: 
  enabled: true
  env: {}
  endpointAddress: prod-api.new.dev.ostelco.org
  ports:
    - 9002
    - 443
  secrets: 
    - secretName: api-ostelco-ssl
      containerMountPath: /etc/nginx/ssl 

metricsEsp:
  enabled: true
  env: {}
  endpointAddress: prod-metrics.new.dev.ostelco.org
  ports:
    - 9004
    - 9443
  secrets: 
    - secretName: metrics-ostelco-ssl
      containerMountPath: /etc/nginx/ssl    

services:
  prime:
    name: prime-service
    type: LoadBalancer
    port: 443
    targetPort: 8443
    portName: grpc 
   # loadBalancerIP: x.y.z.n
  api:
    name: prime-api
    type: LoadBalancer
    port: 443
    targetPort: 443
    portName: https
    # loadBalancerIP: x.y.z.n
  metrics: 
    name: prime-metrics
    type: LoadBalancer
    port: 443
    targetPort: 9443  
    portName: grpc
    # loadBalancerIP: x.y.z.n


ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
  path: /
  hosts:
    - prime.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


certs: 
  enabled: false
  issuer: letsencrypt-staging # or letsencrypt-production
  apiDns: []
  ocsDns: []

disruptionBudget: 
  enabled: false
  minAvailable: 1

nodeSelector: {}

tolerations: []

affinity: {}
